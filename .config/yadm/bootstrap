#!/usr/bin/env zsh
#
# Bootstrap program for the dotfiles repository.
#

set -o errexit  # exit the script if any statement returns a non-true valu
set -o pipefail # unveil hidden pipeline command errors

# Deduce the path to the parent directory.
YADM_DIR="${0:h}"

# Paths to repository configuration files.
: ${YADM_GITCONFIG:=$YADM_DIR/gitconfig}
: ${YADM_GITIGNORE:=$YADM_DIR/gitignore}
: ${YADM_UNSTABLE:=$YADM_DIR/unstable}

# Configure the local yadm repository.
function configure_repo {
  print -P "%F{blue}::%f Configuring the local yadm repository"

  # Hook the local git configuration and ignore patterns.
  yadm gitconfig include.path $YADM_GITCONFIG
  ln -sfn $YADM_GITIGNORE $YADM_DIR/repo.git/info/exclude

  # Enable per-worktree configuration.
  yadm gitconfig extensions.worktreeConfig true

  # Move core.worktree to the main worktree configuration file.
  yadm gitconfig --worktree core.worktree $(yadm gitconfig core.worktree)
  yadm gitconfig --unset core.worktree || true

  # Enable and set sparse checkout patterns for the main worktree.
  yadm sparse-checkout set '/*' '!/LICENSE' '!/README.md'
}

# Set the assume-unchanged bit for unstable files.
function mark_unstable_files {
  local files
  print -P "%F{blue}::%f Marking unstable files with the 'assume-unchanged' bit"

  setopt localoptions nullglob
  files=($HOME/${^~$(<$YADM_UNSTABLE | sed '/^#/d')})

  yadm update-index --assume-unchanged -- $files[@]
}

# Create symlinks to shell runcoms in $HOME.
function bootstrap_xsh {
  print -P "%F{blue}::%f Linking shell runcoms to xsh runcoms"

  # Backup existing shell runcoms or remove existing symlinks.
  for rc in $HOME/.(profile|shrc|bash*|z*)(N); {
    [[ -L $rc ]] && rm -f $rc
    [[ -f $rc ]] && mv $rc $rc.bak
  }

  # Bootstrap xsh for all supported shells.
  source "${XSH_DIR:-$HOME/.xsh}/xsh.sh"
  xsh bootstrap -s posix:bash:zsh
}

# Change the default login shell for the current user.
function change_login_shell {
  if [[ $(cat /etc/passwd | grep $USER) == *:/bin/zsh ]] {
    return
  }

  print -P "%F{blue}::%f Changing the login shell to /bin/zsh"
  chsh $USER --shell=/bin/zsh
}

# Prompt the user to logout from the current session.
function prompt_logout {
  local ans session
  print -P "%F{green}::%f It is recommended to relogin using the new shell configuration"
  print -Pn "%F{green}::%f Logout now? [Y/n] " && read -sk ans; print
  if [[ $ans == ('y'|$'\n') ]] {
    session=$(loginctl session-status | head -n 1 | awk '{print $1}' || true)
    loginctl terminate-session $session
  }
}

# Fallback to using git directly if hub is not installed.
if (( ! $+commands[hub] )) {
  print -P "%F{yellow}::%f 'hub' is not installed: using 'git' as yadm.git-program"
  yadm config yadm.git-program git
}

# Remove integration with git if delta is not installed.
if (( ! $+commands[delta] )) {
  print -P "%F{yellow}::%f 'delta' is not installed: commenting integration with 'git'"
  sed -Ei 's/(path = delta)/# \1/' $HOME/.config/git/config
}

configure_repo
mark_unstable_files
bootstrap_xsh
change_login_shell
prompt_logout
